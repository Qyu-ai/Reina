{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"home/","text":"Welcome to ReInA (Reasoning In AI) For github page visit Reina . About ReInA (Reasoning In AI) is a causal inference platform aimed at estimating heterogeneous treatment effects in observational data. There are various open-source projects that provide convenient causal inference methods, but the current out-of-box packages are limited to local memory for computation. Hence, this project integrates Apache Spark with various machine learning (ML) powered causal inference frameworks, enabling causal analysis on big-data. Installation pip install reina","title":"Home"},{"location":"home/#welcome-to-reina-reasoning-in-ai","text":"For github page visit Reina .","title":"Welcome to  ReInA (Reasoning In AI)"},{"location":"home/#about","text":"ReInA (Reasoning In AI) is a causal inference platform aimed at estimating heterogeneous treatment effects in observational data. There are various open-source projects that provide convenient causal inference methods, but the current out-of-box packages are limited to local memory for computation. Hence, this project integrates Apache Spark with various machine learning (ML) powered causal inference frameworks, enabling causal analysis on big-data.","title":"About"},{"location":"home/#installation","text":"pip install reina","title":"Installation"},{"location":"methods/","text":"Methods Metalearners S-Learner class reina.metalearners.SLearner Methods Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Train the causal model. effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, treatments, outcome, estimator) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable estimator ( sklearn model obj ): Arbitrary ML estimator of choice Returns None ( self ) Example Example S-learner usage can be found here . T-Learner class reina.metalearners.TLearner Methods Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Trains the causal model effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, treatments, outcome, estimator_0, estimator_1) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable estimator_0 ( mllib model obj ): Arbitrary ML model of choice estimator_1 ( mllib model obj ): Arbitrary ML model of choice Returns None ( self ) Example Example T-learner usage can be found here . X-Learner class reina.metalearners.XLearner Methods Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Trains the causal model. effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, treatments, outcome, estimator_0, estimator_1) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable estimator_10 ( mllib model obj ): Arbitrary ML model of choice estimator_11 ( mllib model obj ): Arbitrary ML model of choice estimator_20 ( mllib model obj ): Arbitrary ML model of choice estimator_21 ( mllib model obj ): Arbitrary ML model of choice propensity_estimator ( mllib model obj ): Arbitrary ML model for propensity function Returns None ( self ) Example Example X-learner usage can be found here . IV-based Methods Two-Stage Least Squares class reina.iv.TwoStageLeastSquares Methods Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Trains the causal model. effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, data, treatments, outcome, iv) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable iv ( Str ): Name of the instrument variable Returns None ( self ) Example Example TwoStageLeastSquares usage can be found here .","title":"Methods"},{"location":"methods/#methods","text":"","title":"Methods"},{"location":"methods/#metalearners","text":"","title":"Metalearners"},{"location":"methods/#s-learner","text":"class reina.metalearners.SLearner","title":"S-Learner"},{"location":"methods/#methods_1","text":"Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Train the causal model. effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, treatments, outcome, estimator) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable estimator ( sklearn model obj ): Arbitrary ML estimator of choice Returns None ( self ) Example Example S-learner usage can be found here .","title":"Methods"},{"location":"methods/#t-learner","text":"class reina.metalearners.TLearner Methods Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Trains the causal model effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, treatments, outcome, estimator_0, estimator_1) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable estimator_0 ( mllib model obj ): Arbitrary ML model of choice estimator_1 ( mllib model obj ): Arbitrary ML model of choice Returns None ( self ) Example Example T-learner usage can be found here .","title":"T-Learner"},{"location":"methods/#x-learner","text":"class reina.metalearners.XLearner Methods Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Trains the causal model. effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, treatments, outcome, estimator_0, estimator_1) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable estimator_10 ( mllib model obj ): Arbitrary ML model of choice estimator_11 ( mllib model obj ): Arbitrary ML model of choice estimator_20 ( mllib model obj ): Arbitrary ML model of choice estimator_21 ( mllib model obj ): Arbitrary ML model of choice propensity_estimator ( mllib model obj ): Arbitrary ML model for propensity function Returns None ( self ) Example Example X-learner usage can be found here .","title":"X-Learner"},{"location":"methods/#iv-based-methods","text":"","title":"IV-based Methods"},{"location":"methods/#two-stage-least-squares","text":"class reina.iv.TwoStageLeastSquares Methods Function Name Description init Initialize object. effects Calculates and returns the treatment effects from this class. fit Trains the causal model. effects(self, X, treatment) Calculates and returns the treatment effects from this class. Parameters X ( 2D Spark Dataframe ): Feature data to estimate treatment effect of treatment ( Str ): Name of the treatment variable Returns cate ( 2D Spark DataFrame ): conditional average treatment effect ate ( float ): average treatment effect fit(self, data, data, treatments, outcome, iv) Trains the ML-based causal model for this class. Parameters data ( 2-D Spark dataframe ): Base dataset containing features, treatment, iv, and outcome variables treatments ( List ): Names of the treatment variables outcome ( Str ): Name of the outcome variable iv ( Str ): Name of the instrument variable Returns None ( self ) Example Example TwoStageLeastSquares usage can be found here .","title":"Two-Stage Least Squares"},{"location":"references/","text":"References","title":"References"},{"location":"references/#references","text":"","title":"References"}]}